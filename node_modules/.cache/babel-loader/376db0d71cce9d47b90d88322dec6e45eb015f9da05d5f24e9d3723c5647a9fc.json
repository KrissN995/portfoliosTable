{"ast":null,"code":"var _jsxFileName = \"/Users/kristinanikolova/Desktop/codeChallanges/portfoliosTable/src/pages/MainPage.tsx\",\n  _s = $RefreshSig$();\nimport CssBaseline from '@mui/material/CssBaseline';\nimport React from 'react';\nimport { Grid } from \"@mui/material\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport Topbar from \"../components/shared/Topbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    height: '100vh'\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flex: 1\n  },\n  pageArea: {\n    flex: 1,\n    overflow: 'auto',\n    padding: theme.spacing(1)\n  }\n}));\nconst MainPage = () => {\n  _s();\n  const classes = useStyles();\n\n  //<div className={'App'}\n  //             style={{\n  //                 overflow: 'auto',\n  //                 height: `calc('100%' - '4em')`,\n  //                 backgroundColor: theme.palette.background.default,\n  //                 color: theme.palette.text.primary,\n  //             }}>\n  //     <CssBaseline/>\n  //     <Grid sx={{backgroundColor: theme.palette.background.paper}}>\n  //         <Button onClick={() => handleThemeChange()}>\n  //             Theme\n  //         </Button>\n  //         <Typography variant={'h6'}\n  //                     sx={{color: isDarkTheme ? theme.palette.success.main : theme.palette.error.main}}>Check if color\n  //             will change</Typography>\n  //     </Grid>\n  // </div>;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      className: classes.content,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: classes.appBarSpacer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.pageArea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n};\n_s(MainPage, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["CssBaseline","React","Grid","makeStyles","Topbar","useStyles","theme","root","display","height","appBarSpacer","mixins","toolbar","content","flex","pageArea","overflow","padding","spacing","MainPage","classes"],"sources":["/Users/kristinanikolova/Desktop/codeChallanges/portfoliosTable/src/pages/MainPage.tsx"],"sourcesContent":["import CssBaseline from '@mui/material/CssBaseline';\nimport React from 'react';\nimport {Grid, Theme} from \"@mui/material\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport Topbar from \"../components/shared/Topbar\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        display: 'flex', height: '100vh',\n    }, appBarSpacer: theme.mixins.toolbar, content: {\n        flex: 1,\n    }, pageArea: {\n        flex: 1, overflow: 'auto', padding: theme.spacing(1)\n    },\n}));\n\nconst MainPage = () => {\n    const classes = useStyles();\n\n    //<div className={'App'}\n    //             style={{\n    //                 overflow: 'auto',\n    //                 height: `calc('100%' - '4em')`,\n    //                 backgroundColor: theme.palette.background.default,\n    //                 color: theme.palette.text.primary,\n    //             }}>\n    //     <CssBaseline/>\n    //     <Grid sx={{backgroundColor: theme.palette.background.paper}}>\n    //         <Button onClick={() => handleThemeChange()}>\n    //             Theme\n    //         </Button>\n    //         <Typography variant={'h6'}\n    //                     sx={{color: isDarkTheme ? theme.palette.success.main : theme.palette.error.main}}>Check if color\n    //             will change</Typography>\n    //     </Grid>\n    // </div>;\n\n    return (<div className={classes.root}>\n        <CssBaseline/>\n        <Topbar/>\n        <Grid container direction='column' className={classes.content}>\n            <Grid className={classes.appBarSpacer}/>\n            <Grid container className={classes.pageArea}>\n            </Grid>\n        </Grid>\n    </div>);\n\n};\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAOA,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,IAAI,QAAc,eAAe;AACzC,OAAOC,UAAU,MAAM,wBAAwB;AAC/C,OAAOC,MAAM,MAAM,6BAA6B;AAAC;AAEjD,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAY,KAAM;EAC5CC,IAAI,EAAE;IACFC,OAAO,EAAE,MAAM;IAAEC,MAAM,EAAE;EAC7B,CAAC;EAAEC,YAAY,EAAEJ,KAAK,CAACK,MAAM,CAACC,OAAO;EAAEC,OAAO,EAAE;IAC5CC,IAAI,EAAE;EACV,CAAC;EAAEC,QAAQ,EAAE;IACTD,IAAI,EAAE,CAAC;IAAEE,QAAQ,EAAE,MAAM;IAAEC,OAAO,EAAEX,KAAK,CAACY,OAAO,CAAC,CAAC;EACvD;AACJ,CAAC,CAAC,CAAC;AAEH,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAMC,OAAO,GAAGf,SAAS,EAAE;;EAE3B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBAAQ;IAAK,SAAS,EAAEe,OAAO,CAACb,IAAK;IAAA,wBACjC,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eACd,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT,QAAC,IAAI;MAAC,SAAS;MAAC,SAAS,EAAC,QAAQ;MAAC,SAAS,EAAEa,OAAO,CAACP,OAAQ;MAAA,wBAC1D,QAAC,IAAI;QAAC,SAAS,EAAEO,OAAO,CAACV;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE,eACxC,QAAC,IAAI;QAAC,SAAS;QAAC,SAAS,EAAEU,OAAO,CAACL;MAAS;QAAA;QAAA;QAAA;MAAA,QACrC;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEV,CAAC;AAAC,GA/BII,QAAQ;EAAA,QACMd,SAAS;AAAA;AAAA,KADvBc,QAAQ;AAiCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}